name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # for checkout

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    outputs:
      NBGV_SemVer2: ${{ steps.gitversion.outputs.NBGV_SemVer2 }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Setup pnpm
        uses: pnpm/action-setup@v4.2.0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - run: pnpm install
      - run: pnpm exec nbgv cloud --all-vars
      - name: gitversion
        id: gitversion
        run: |
          echo "NBGV_SemVer2=$NBGV_SemVer2"
          echo "NBGV_SemVer2=$NBGV_SemVer2" >> $GITHUB_OUTPUT
      - run: pnpm run update-version
      - run: pnpm build
      - run: pnpm test

      - run: pnpm pack

      # publish artifacts for the build
      - name: Upload artifacts
        uses: actions/upload-artifact@v5
        with:
          name: build-artifacts-${{ matrix.node-version }}
          path: "*.tgz"
          if-no-files-found: error # fail the job if no files found

  prepare_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # for release drafter

    needs: build
    env:
      NBGV_SemVer2: ${{ needs.build.outputs.NBGV_SemVer2 }}

    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Running this job only for master branch
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      # download artifacts from the build job
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: build-artifacts-22.x

      # dump needs.build.outputs
      - name: Dump outputs
        run: |
          echo "${{ toJson(needs.build.outputs) }}"

          printenv | sort

      - uses: release-drafter/release-drafter@v6
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: ${{ needs.build.outputs.NBGV_SemVer2 }}

      - name: Remove existing release asset
        uses: flcdrg/remove-release-asset-action@v4
        with:
          # The release id to remove asset from
          release_id: ${{ steps.create_release.outputs.id }}
          # The name of the asset you want to remove
          asset_name: "*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - uses: ./.github/actions/upload-release-assets
        with:
          releaseId: ${{ steps.create_release.outputs.id }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          files: "*.tgz"
